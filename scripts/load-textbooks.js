#!/usr/bin/env node

import { TextbookManager } from '../dist/textbook-manager.js';
import { DatabaseManager } from '../dist/database.js';
import path from 'path';
import { fileURLToPath } from 'url';
import fs from 'fs/promises';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function loadTextbooks() {
  const directoryPath = process.argv[2];
  
  if (!directoryPath) {
    console.error('‚ùå ÏÇ¨Ïö©Î≤ï: node scripts/load-textbooks.js <ÍµêÏû¨_ÎîîÎ†âÌÜ†Î¶¨_Í≤ΩÎ°ú>');
    console.error('Ïòà: node scripts/load-textbooks.js ./textbooks');
    process.exit(1);
  }
  
  console.log('üå≥ ÎÇòÎ¨¥ÏùòÏÇ¨ ÍµêÏû¨ Î°úÎìú ÏãúÏûë...\n');
  
  try {
    // ÎîîÎ†âÌÜ†Î¶¨ ÌôïÏù∏
    await fs.access(directoryPath);
    const stats = await fs.stat(directoryPath);
    if (!stats.isDirectory()) {
      throw new Error('ÏßÄÏ†ïÎêú Í≤ΩÎ°úÍ∞Ä ÎîîÎ†âÌÜ†Î¶¨Í∞Ä ÏïÑÎãôÎãàÎã§.');
    }
    
    // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï¥àÍ∏∞Ìôî
    const dbPath = path.join(__dirname, '..', 'tree-doctor-pdf-qa.db');
    const db = new DatabaseManager(dbPath);
    await db.initialize();
    
    // ÍµêÏû¨ Í¥ÄÎ¶¨Ïûê Ï¥àÍ∏∞Ìôî
    const textbookManager = new TextbookManager(db);
    
    // ÍµêÏû¨ Î°úÎìú
    console.log(`üìÅ ÎîîÎ†âÌÜ†Î¶¨: ${directoryPath}`);
    console.log('üìö ÍµêÏû¨ Î°úÎìú Ï§ë...\n');
    
    const result = await textbookManager.loadTextbooks(directoryPath);
    
    if (result.success) {
      console.log('\n‚úÖ ÍµêÏû¨ Î°úÎìú ÏôÑÎ£å!');
      console.log(`üìä Î°úÎìúÎêú ÍµêÏû¨: ${result.loadedCount}Í∞ú`);
      
      if (result.errors && result.errors.length > 0) {
        console.log(`\n‚ö†Ô∏è  Ïò§Î•ò Î∞úÏÉù: ${result.errors.length}Í∞ú`);
        result.errors.forEach(error => {
          console.log(`   - ${error}`);
        });
      }
      
      // ÌÜµÍ≥Ñ Ï∂úÎ†•
      const stats = await textbookManager.getTextbookStats();
      console.log('\nüìà ÍµêÏû¨ ÌÜµÍ≥Ñ:');
      console.log(`   Ï¥ù ÍµêÏû¨ Ïàò: ${stats.totalTextbooks}Í∞ú`);
      console.log(`   Ï¥ù ÌéòÏù¥ÏßÄ Ïàò: ${stats.totalPages}ÌéòÏù¥ÏßÄ`);
      console.log(`   Í≥ºÎ™©Î≥Ñ ÍµêÏû¨:`);
      Object.entries(stats.bySubject).forEach(([subject, count]) => {
        console.log(`   - ${subject}: ${count}Í∞ú`);
      });
      
    } else {
      console.error('‚ùå ÍµêÏû¨ Î°úÎìú Ïã§Ìå®');
      if (result.errors) {
        result.errors.forEach(error => {
          console.error(`   - ${error}`);
        });
      }
    }
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò Î∞úÏÉù:', error.message);
    process.exit(1);
  }
}

// Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ
if (import.meta.url === `file://${process.argv[1]}`) {
  loadTextbooks();
}